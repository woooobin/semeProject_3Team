CREATE SEQUENCE PROJECT_SEQ;
CREATE TABLE PROJECTS(
	projectId NUMBER(30),
	userId VARCHAR2 (30),
	projectMainTitle VARCHAR2(100),
	projectSubTitle VARCHAR2(100),
	thumbImage VARCHAR2(100),
	projectCategory VARCHAR2(30),
	projectStartDate DATE,
	projectEndDate DATE ,
	shippingStartDate DATE,
	detailDesc VARCHAR2(4000),
	createdAt DATE,
	updatedAt DATE,
	address VARCHAR2(100),
	lattitude VARCHAR2(30),
	longitude VARCHAR2(30),
	province VARCHAR2(30),
	goalPrice NUMBER,
	totalPrice NUMBER,
	soldCount NUMBER,
	likeCount NUMBER,
	CONSTRAINT PROJECT_PK PRIMARY KEY (projectId),
	CONSTRAINT PROJECT_USER_FK FOREIGN KEY (userId) REFERENCES MEMBERS (userId)
);

CREATE SEQUENCE PROJECT_ITEM_SEQ;

CREATE TABLE PROJECTITEM (
	projectItemSeq NUMBER NOT NULL,
	projectItemName VARCHAR2(100) NOT NULL,
	projectItemDesc VARCHAR2(100),
	shippingFee NUMBER NOT NULL,
	quantity NUMBER ,
	thumbImage VARCHAR2 (100) NOT NULL,
	projectId NUMBER,
	CONSTRAINT PROJECT_ITEM_PK PRIMARY KEY (projectItemSeq),
	CONSTRAINT PROJECT_ID_FK FOREIGN KEY (projectId) REFERENCES PROJECTS (projectId)
);


CREATE TABLE PROJECTLIKE(
	projectId NUMBER NOT NULL,
	userId VARCHAR2(30) NOT NULL,
	CONSTRAINT PROJECTLIKE_PROJECTID_FK FOREIGN KEY (projectId) REFERENCES PROJECTS (projectId) ON DELETE CASCADE,
	CONSTRAINT PROJECTLIKE_USERID_FK FOREIGN KEY (userId) REFERENCES MEMBERS (userId) ON DELETE CASCADE
);

CREATE SEQUENCE HASHTAG_SEQ;
CREATE TABLE HASHTAG(
	hashtagSeq NUMBER NOT NULL,
	hashtagName VARCHAR2(30) NOT NULL,
	CONSTRAINT HASHTAG_PK PRIMARY KEY (hashtagSeq)
);


CREATE SEQUENCE PROJECT_HASHTAG_SEQ;

CREATE TABLE PROJECTHASHTAG(
	projectHashtagSeq NUMBER NOT NULL,
	hashtagSeq NUMBER NOT NULL,
	projectId NUMBER NOT NULL,
	CONSTRAINT PROJECT_HASHTAG_PK PRIMARY KEY (projectHashtagSeq),
	CONSTRAINT PROJECT_HASHTAG_HSEQ_FK FOREIGN KEY (hashtagSeq) REFERENCES HASHTAG (hashtagSeq) ON DELETE CASCADE,
	CONSTRAINT PROJECT_HASHTAG_PID_FK FOREIGN KEY (projectId) REFERENCES PROJECTS (projectId) ON DELETE CASCADE
);

CREATE SEQUENCE PROJECTNOTICESEQ;
CREATE TABLE PROJECTNOTICE (
	projectNoticeSeq NUMBER NOT NULL,
	isAnswer CHAR (2) NOT NULL ,
	content VARCHAR2(100) ,
	title VARCHAR2(100),
	projectId NUMBER NOT NULL,
	userId VARCHAR2(30) NOT NULL,
	CONSTRAINT PROJECTNOTICE_PK PRIMARY KEY (projectNoticeSeq),
	CONSTRAINT ISANSWER_CHK  CHECK ( isAnswer IN('Y', 'N')) ,
	CONSTRAINT PROJECTNOTICE_PID_FK FOREIGN KEY (projectId) REFERENCES PROJECTS (projectId),
	CONSTRAINT PROJECTNOTICE_USERID_FK FOREIGN KEY (userId) REFERENCES MEMBERS (userId)
);

